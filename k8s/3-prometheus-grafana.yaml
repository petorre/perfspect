# Copyright (C) 2025 Intel Corporation
# SPDX-License-Identifier: Apache-2.0
#
---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: demo
  name: reporting
  labels:
    app.kubernetes.io/name: reporting
    app.kubernetes.io/component: backend
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: reporting
      app.kubernetes.io/component: backend
  replicas: 1
  template:
    metadata:
      labels:
        app.kubernetes.io/name: reporting
        app.kubernetes.io/component: backend
    spec:
      containers:
      - name: prometheus
        image: prom/prometheus
        imagePullPolicy: IfNotPresent
        env:
        - name: LINUXIPADDR
          value: "LINUXIPADDR"
        command: ["sh", "-c"]
        args:
        - cd /etc/prometheus;
          wget -T 5 -O prometheus.yml 'http://metrics-default.demo.svc.cluster.local:8000/prometheus.yml';
          cat prometheus.yml;
          /bin/prometheus --config.file=/etc/prometheus/prometheus.yml --storage.tsdb.path=/prometheus --web.console.libraries=/usr/share/prometheus/console_libraries --web.console.templates=/usr/share/prometheus/consoles;
        ports:
        - containerPort: 9090
      - name: grafana
        image: grafana/grafana
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 3000
        env:
        - name: GF_SECURITY_ADMIN_PASSWORD
          value: "password"
---
apiVersion: v1
kind: Service
metadata:
  name: reporting
  namespace: demo
  labels:
    app.kubernetes.io/name: reporting
    app.kubernetes.io/component: backend
spec:
  ports:
  - name: grafana
    port: 3000
    targetPort: 3000
  - name: prometheus
    port: 9090
    targetPort: 9090
  selector:
    app.kubernetes.io/name: reporting
    app.kubernetes.io/component: backend
---
apiVersion: v1
kind: Service
metadata:
  name: reporting-lb
  namespace: demo
  labels:
    app.kubernetes.io/name: reporting
    app.kubernetes.io/component: backend
spec:
  allocateLoadBalancerNodePorts: true
  externalTrafficPolicy: Cluster
  internalTrafficPolicy: Cluster
  ports:
  - name: grafana
    port: 3000
    targetPort: 3000
    nodePort:
  - name: prometheus
    port: 9090
    targetPort: 9090
    nodePort:
  selector:
    app.kubernetes.io/name: reporting
    app.kubernetes.io/component: backend
  type: LoadBalancer
